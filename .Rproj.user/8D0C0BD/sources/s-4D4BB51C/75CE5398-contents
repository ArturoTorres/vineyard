#' Fill NAs for a single pixel time series by following/preceding neighbour.
#'
#' @param x the pixel time series as xts
#'
#' @return a time series with replaced NAs as vector
#'
#' @importFrom zoo na.locf
#' @importFrom xts is.xts
eotsa_fill_nbr <- function(x) {
  if (is.xts(x)) {
    x <- x[,1]
  }
  NAs <- which(is.na(x))
  if (length(NAs) == 0) {
    return(as.numeric(x))
  }
  
  x <- na.locf(x, na.rm = F)
  if (1 %in% NAs)
    x <- na.locf(x, fromLast = T)
  
  # cat(length(NAs), "\nNAs replaced.\n")
  return(as.numeric(x))
}


#' Fills NAs in a space-time object.
#'
#' @param x  a raster or a space-time object
#' @param cell_removal the removal method (default: following/preceding neighbour)
#'
#' @return the object having replaced NAs
#' @export eotsa_fill_tsapply
eotsa_fill_tsapply <- function(x, cell_removal=eotsa_fill_nbr) {
  if (class(x) == "STFDF") {
    rs.nonas <- eotsa_stapply(x, "space", cell_removal)
    rs.nonas <- do.call(rbind, rs.nonas)
    x@data[,1] <- as.numeric(rs.nonas)
    x
  } else {
    rs <- calc(x, cell_removal)
    setZ(rs, getZ(x))
  }
}


